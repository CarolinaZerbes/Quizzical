{"ast":null,"code":"var _jsxFileName = \"/Users/carolinazerbes/Documents/Cursos/React/Quizzical/src/components/QuestionsPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionsPage(props) {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\").then(res => res.json()).then(data => setQuestions(data.results));\n  }, [props.firstPage]);\n  console.log(questions);\n  const questionElements = questions.map((question, index) => {\n    let answers = question.incorrect_answers; // const randomNumber = Math.floor(Math.random() * 5)\n    // console.log(\"Answers\")\n    // console.log(answers)\n\n    answers = answers.filter(function (item, pos) {\n      return a.indexOf(item) == pos;\n    });\n    answers = answers.filter(function (element) {\n      return element !== undefined;\n    });\n    answers.splice(randomNumber, 0, question.correct_answer);\n    console.log(answers);\n    return /*#__PURE__*/_jsxDEV(Question, {\n      question: question.question,\n      answers: answers\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questionElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuestionsPage, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n\n_c = QuestionsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsPage\");","map":{"version":3,"sources":["/Users/carolinazerbes/Documents/Cursos/React/Quizzical/src/components/QuestionsPage.js"],"names":["React","Question","QuestionsPage","props","questions","setQuestions","useState","useEffect","fetch","then","res","json","data","results","firstPage","console","log","questionElements","map","question","index","answers","incorrect_answers","filter","item","pos","a","indexOf","element","undefined","splice","randomNumber","correct_answer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA;;AACxC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClBC,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIP,YAAY,CAACO,IAAI,CAACC,OAAN,CAF9B;AAGH,GAJD,EAIG,CAACV,KAAK,CAACW,SAAP,CAJH;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACA,QAAMa,gBAAgB,GAAGb,SAAS,CAACc,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAoB;AACvD,QAAIC,OAAO,GAAGF,QAAQ,CAACG,iBAAvB,CADuD,CAEvD;AACA;AACA;;AACAD,IAAAA,OAAO,GAAGA,OAAO,CAACE,MAAR,CAAe,UAASC,IAAT,EAAeC,GAAf,EAAoB;AACzC,aAAOC,CAAC,CAACC,OAAF,CAAUH,IAAV,KAAmBC,GAA1B;AACH,KAFS,CAAV;AAGAJ,IAAAA,OAAO,GAAGA,OAAO,CAACE,MAAR,CAAe,UAAUK,OAAV,EAAoB;AACzC,aAAOA,OAAO,KAAKC,SAAnB;AACF,KAFQ,CAAV;AAGAR,IAAAA,OAAO,CAACS,MAAR,CAAeC,YAAf,EAA6B,CAA7B,EAAgCZ,QAAQ,CAACa,cAAzC;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACA,wBACI,QAAC,QAAD;AAEI,MAAA,QAAQ,EAAEF,QAAQ,CAACA,QAFvB;AAGI,MAAA,OAAO,EAAEE;AAHb,OACSD,KADT;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GApBwB,CAAzB;AAqBA,sBACI;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GApCuBf,a;;KAAAA,a","sourcesContent":["import React from \"react\"\nimport Question from \"./Question\"\n\nexport default function QuestionsPage(props){\n    const [questions, setQuestions] = React.useState([])\n\n    React.useEffect(() => {\n        fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n            .then(res => res.json())\n            .then(data => setQuestions(data.results))\n    }, [props.firstPage])\n    \n    console.log(questions)\n    const questionElements = questions.map((question, index) =>{\n        let answers = question.incorrect_answers\n        // const randomNumber = Math.floor(Math.random() * 5)\n        // console.log(\"Answers\")\n        // console.log(answers)\n        answers = answers.filter(function(item, pos) {\n            return a.indexOf(item) == pos;\n        })\n        answers = answers.filter(function( element ) {\n            return element !== undefined;\n         });\n        answers.splice(randomNumber, 0, question.correct_answer);\n        console.log(answers)\n        return(\n            <Question \n                key={index}\n                question={question.question}\n                answers={answers}\n            />\n        )\n    })\n    return(\n        <div>\n            {questionElements}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}