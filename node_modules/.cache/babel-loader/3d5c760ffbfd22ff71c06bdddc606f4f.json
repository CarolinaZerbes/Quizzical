{"ast":null,"code":"var _jsxFileName = \"/Users/carolinazerbes/Documents/Cursos/React/Quizzical/src/components/QuestionsPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionsPage(props) {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\").then(res => res.json()).then(data => setQuestions(data));\n  }, []);\n  const questionElements = questions.result.map(question => {\n    let answers = question.incorrect_answers;\n    const randomNumber = Math.floor(Math.random() * 5);\n    answers.splice(randomNumber, 0, question.correctAnswer);\n    return /*#__PURE__*/_jsxDEV(Question, {\n      question: question.question,\n      correctAnswer: answers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuestionsPage, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n\n_c = QuestionsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsPage\");","map":{"version":3,"sources":["/Users/carolinazerbes/Documents/Cursos/React/Quizzical/src/components/QuestionsPage.js"],"names":["React","QuestionsPage","props","questions","setQuestions","useState","useEffect","fetch","then","res","json","data","questionElements","result","map","question","answers","incorrect_answers","randomNumber","Math","floor","random","splice","correctAnswer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA;;AACxC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;AAEAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AAClBC,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIP,YAAY,CAACO,IAAD,CAF9B;AAGH,GAJD,EAIG,EAJH;AAMA,QAAMC,gBAAgB,GAAGT,SAAS,CAACU,MAAV,CAAiBC,GAAjB,CAAsBC,QAAD,IAAa;AACvD,QAAIC,OAAO,GAAGD,QAAQ,CAACE,iBAAvB;AACA,UAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;AACAL,IAAAA,OAAO,CAACM,MAAR,CAAeJ,YAAf,EAA6B,CAA7B,EAAgCH,QAAQ,CAACQ,aAAzC;AACA,wBACI,QAAC,QAAD;AACI,MAAA,QAAQ,EAAER,QAAQ,CAACA,QADvB;AAEI,MAAA,aAAa,EAAEC;AAFnB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAVwB,CAAzB;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAzBuBf,a;;KAAAA,a","sourcesContent":["import React from \"react\"\n\nexport default function QuestionsPage(props){\n    const [questions, setQuestions] = React.useState([])\n\n    React.useEffect(() => {\n        fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n            .then(res => res.json())\n            .then(data => setQuestions(data))\n    }, [])\n    \n    const questionElements = questions.result.map((question) =>{\n        let answers = question.incorrect_answers\n        const randomNumber = Math.floor(Math.random() * 5)\n        answers.splice(randomNumber, 0, question.correctAnswer);\n        return(\n            <Question \n                question={question.question}\n                correctAnswer={answers}\n            />\n        )\n    })\n    return(\n        <div>\n            {/*      */}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}