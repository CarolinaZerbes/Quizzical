{"ast":null,"code":"var _jsxFileName = \"/Users/carolinazerbes/Documents/Cursos/React/Quizzical/src/components/QuestionsPage.js\",\n    _s = $RefreshSig$();\n\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport React from \"react\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionsPage(props) {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  const [questionsDB, setQuestionsDB] = React.useState([]); // const questionsDB = {}\n\n  console.log(\"start\");\n  console.log(questions);\n\n  function updateQuestions(question) {\n    setQuestions(prevQuestions => {\n      console.log(\"HERE1\");\n      console.log(question);\n      console.log(prevQuestions);\n\n      if (!prevQuestions) {\n        console.log(\"FIRST\");\n        prevQuestions = [question];\n      } else prevQuestions.push(question); //Object.assign(prevQuestions, question)\n\n\n      console.log(\"HERE2\");\n      console.log(typeof prevQuestions);\n      console.log(prevQuestions);\n      return {\n        prevQuestions\n      };\n    });\n  }\n\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\").then(res => res.json()).then(data => setQuestionsDB(data.results));\n  }, [props.firstPage]);\n  let questionElements = \"\";\n  React.useEffect(() => {\n    questionElements = questionsDB.map((question, index) => {\n      let answers = question.incorrect_answers;\n      answers = answers.filter(function (item, pos) {\n        return answers.indexOf(item) == pos;\n      });\n      answers = answers.filter(function (element) {\n        return element !== undefined;\n      });\n      !answers.includes(question.correct_answer) && answers.splice(Math.floor(Math.random() * 3), 0, question.correct_answer); // answers.splice(randomNumber, 0, question.correct_answer);\n\n      const finalAnswers = answers.map(answer => {\n        return answer.replace(/&lt;/g, \"<\").replace(/&Gt;/g, \">\").replace(/&#039;/g, \"'\").replace(/&amp;/g, \"\").replace(/&ouml;/g, \"o\").replace(/&quot;/g, \"\").replace(/&ldquo;/g, `\"`).replace(/&eacute;/g, `e`);\n      });\n      let finalQuestion = question.question;\n      finalQuestion.replace(/&lt;/g, \"<\").replace(/&Gt;/g, \">\").replace(/&#039;/g, \"\").replace(/&amp;/g, \"\").replace(/&ouml;/g, \"o\").replace(/&quot;/g, \"\").replace(/&ldquo;/g, `\"`).replace(/&eacute;/g, `e`);\n      let correct_answer = question.correct_answer;\n      correct_answer.replace(/&lt;/g, \"<\").replace(/&Gt;/g, \">\").replace(/&#039;/g, \"'\").replace(/&amp;/g, \"\").replace(/&ouml;/g, \"o\").replace(/&quot;/g, \"\").replace(/&ldquo;/g, `\"`).replace(/&eacute;/g, `e`);\n      let element = {\n        [index]: {\n          correct_answer: correct_answer,\n          answers: finalAnswers,\n          question: finalQuestion,\n          answer: \"\",\n          index: index\n        }\n      }; // console.log(\"ELEMENT\")\n      // console.log(element)\n\n      updateQuestions(element);\n      return /*#__PURE__*/_jsxDEV(Question, {\n        element: question,\n        handleChange: handleChange // question={finalQuestion}\n        // answers={finalAnswers}\n\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this);\n    });\n  }, [questionsDB]); // console.log(questionsDB)\n\n  function handleChange(event, index) {// const {name, value} = event.target\n    // setQuestions(prevQuestions => {\n    //     prevQuestions[index] = {\n    //         ...prevQuestions[index],\n    //         [name] : value\n    //     }\n    //     return{\n    //         prevQuestions\n    //     }\n    // })\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions-page\",\n    children: [questionElements, /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Check Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuestionsPage, \"JNfYU9kww9AhglY/1ie1U7KetEM=\");\n\n_c = QuestionsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsPage\");","map":{"version":3,"sources":["/Users/carolinazerbes/Documents/Cursos/React/Quizzical/src/components/QuestionsPage.js"],"names":["type","React","Question","QuestionsPage","props","questions","setQuestions","useState","questionsDB","setQuestionsDB","console","log","updateQuestions","question","prevQuestions","push","useEffect","fetch","then","res","json","data","results","firstPage","questionElements","map","index","answers","incorrect_answers","filter","item","pos","indexOf","element","undefined","includes","correct_answer","splice","Math","floor","random","finalAnswers","answer","replace","finalQuestion","handleChange","event"],"mappings":"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","sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\"\nimport React from \"react\"\nimport Question from \"./Question\"\n\nexport default function QuestionsPage(props){\n    const [questions, setQuestions] = React.useState([])\n    const [questionsDB, setQuestionsDB] = React.useState([])\n    \n    // const questionsDB = {}\n    console.log(\"start\")\n    console.log(questions)\n    function updateQuestions (question) {\n        setQuestions(prevQuestions => {\n\n            console.log(\"HERE1\")\n            console.log(question)\n            console.log(prevQuestions)\n\n            if (!prevQuestions){\n                console.log(\"FIRST\")\n                prevQuestions = [question]\n            }\n            else\n                prevQuestions.push(question)\n\n                //Object.assign(prevQuestions, question)\n\n            console.log(\"HERE2\")\n            console.log(typeof(prevQuestions))\n            console.log(prevQuestions)\n\n            return {\n                prevQuestions\n            }\n        })\n    }\n\n\n    React.useEffect(() => {\n        fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n            .then(res => res.json())\n            .then(data => setQuestionsDB(data.results)) \n    }, [props.firstPage])\n\n    let questionElements = \"\"\n\n    React.useEffect(() => {\n        questionElements = questionsDB.map((question, index) =>{\n            \n            let answers = question.incorrect_answers\n            \n            answers = answers.filter(function(item, pos) {\n                return answers.indexOf(item) == pos;\n            })\n            answers = answers.filter(function( element ) {\n                return element !== undefined;\n            });\n\n            (!answers.includes(question.correct_answer) && answers.splice(Math.floor(Math.random() * 3), 0, question.correct_answer))\n            // answers.splice(randomNumber, 0, question.correct_answer);\n\n            const finalAnswers = answers.map(answer => {  \n                return(\n                    answer.replace(/&lt;/g, \"<\")\n                        .replace(/&Gt;/g, \">\")\n                        .replace(/&#039;/g, \"'\")\n                        .replace(/&amp;/g, \"\")\n                        .replace(/&ouml;/g, \"o\")\n                        .replace(/&quot;/g, \"\")\n                        .replace(/&ldquo;/g, `\"`)\n                        .replace(/&eacute;/g, `e`)\n                        \n                        \n                )\n            } )\n            let finalQuestion = question.question\n            finalQuestion.replace(/&lt;/g, \"<\")\n                .replace(/&Gt;/g, \">\")\n                .replace(/&#039;/g, \"\")\n                .replace(/&amp;/g, \"\")\n                .replace(/&ouml;/g, \"o\")\n                .replace(/&quot;/g, \"\")\n                .replace(/&ldquo;/g, `\"`)\n                .replace(/&eacute;/g, `e`)\n\n            let correct_answer = question.correct_answer\n            correct_answer.replace(/&lt;/g, \"<\")\n                .replace(/&Gt;/g, \">\")\n                .replace(/&#039;/g, \"'\")\n                .replace(/&amp;/g, \"\")\n                .replace(/&ouml;/g, \"o\")\n                .replace(/&quot;/g, \"\")\n                .replace(/&ldquo;/g, `\"`)\n                .replace(/&eacute;/g, `e`)\n            \n            let element = {\n                [index] : {\n                    correct_answer : correct_answer,\n                    answers : finalAnswers,\n                    question : finalQuestion,\n                    answer : \"\",\n                    index : index\n                }\n            }\n            // console.log(\"ELEMENT\")\n            // console.log(element)\n            \n            updateQuestions(element)\n\n            return(\n                <Question \n                    key={index}\n                    element={question}\n                    handleChange={handleChange}\n                    // question={finalQuestion}\n                    // answers={finalAnswers}\n    \n                />\n            )\n           \n        })\n\n    }, [questionsDB])\n\n\n    // console.log(questionsDB)\n    function handleChange(event, index){\n        // const {name, value} = event.target\n        // setQuestions(prevQuestions => {\n        //     prevQuestions[index] = {\n        //         ...prevQuestions[index],\n        //         [name] : value\n        //     }\n        //     return{\n        //         prevQuestions\n        //     }\n        // })\n    }\n\n\n    return(\n        <div className=\"questions-page\">\n            {questionElements}\n            <button>Check Answers</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}